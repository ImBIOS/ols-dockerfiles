name: docker-build

on:
  schedule:
    - cron: "0 0 * * *" # Every day at midnight
  workflow_dispatch:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master
env:
  FOLDER: template
  OLS_VERSION: 1.8.1
  IS_OUTDATED: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PHP_VERSION: [lsphp74, lsphp80, lsphp81, lsphp82, lsphp83]
        TAG: [latest, ""]
    steps:
      - name: Install jq
        run: sudo apt install jq

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pipenv"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: install dependencies
        run: |
          pipenv install

      - name: Run version check script
        run: echo "OLS_VERSION=$(pipenv run python get_ols_latest_version.py)" >> $GITHUB_ENV

      - name: Compare versions
        run: |
          if [ "${{ env.OLS_VERSION }}" != $(cat versions.json | jq -r '.${{ matrix.PHP_VERSION }}') ]; then
            echo "IS_OUTDATED=true" >> $GITHUB_ENV
          fi

      - name: Docker build and push
        if: ${{ (github.ref == 'refs/heads/master' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch') || (github.event_name == 'schedule' && env.IS_OUTDATED == 'true') }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          cd ${{ env.FOLDER }}
          bash build.sh --ols ${{ env.OLS_VERSION }} --php ${{ matrix.PHP_VERSION }} --tag "${{ matrix.TAG }}" --push
          cd ..
          echo "${{ env.OLS_VERSION }}" > version
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build
        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'pull_request' }}
        run: |
          cd ${{ env.FOLDER }}
          bash build.sh --ols ${{ env.OLS_VERSION }} --php ${{ matrix.PHP_VERSION }} --tag ${{ matrix.TAG }}

      - name: Commit and push version file
        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add version
          git commit -m "Update version file ${{ env.OLS_VERSION }}"
          git rebase origin/master
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
